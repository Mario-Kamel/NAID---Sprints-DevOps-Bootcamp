Note: Scroll down for answers

Using sed utility
1- Display the lines that contain the word “lp” in /etc/passwd file.
2- Display /etc/passwd file except the third line.
3- Display /etc/passwd file except the last line.
4- Display /etc/passwd file except the lines that contain the word “lp”.
5- Substitute all the words that contain “lp” with “mylp” in /etc/passwd file.


Using awk utility
1- Print full name (comment) of all users in the system.  ***
2- Print login, full name (comment) and home directory of all users.( Print each line preceded by a line number)
3- Print login, uid and full name (comment) of those uid is greater than 500
4- Print login, uid and full name (comment) of those uid is exactly 500
5- Print line from 5 to 15 from /etc/passwd
6- Get the sum of all accounts id’s.

---------------------------------------

1. Write a script called mycase, using the case utility to checks the type of character entered by a user:
	a. Upper Case.
	b. Lower Case.
	c. Number.
	d. Nothing.
2. (Optional, Can be skipped)Enhanced the previous script, by checking the type of string entered by a user:
	a. Upper Cases.
	b. Lower Cases.
	c. Numbers.
	d. Mix.
	e. Nothing.
3. Write a script called mychmod using for utility to give execute permission to all files and directories in your home directory.
4. Write a script called mybackup using for utility to create a backup of only files in your home directory.
5. Write a script called mymail using for utility to send a mail to all users in the system. Note: write the mail body in a file called mtemplate.
6. Write a script called chkmail to check for new mails every 10 seconds. Note: mails are saved in /var/mail/username.
7. Create the following menu:
	a. Press 1 to ls
	b. Press 2 to ls –a
	c. Press 3 to exit
Using select utility then while utility.
8. Write a script called myarr that ask a user how many elements he wants to enter in an array, fill the array and then print it.
9. Write a script called myavg that calculate average of all numbers entered by a user. Note: use arrays


Answers:

1. sed -n '/lp/p' /etc/passwd
2. sed '3d' /etc/passwd
3. sed '$d' /etc/passwd
4. sed '/lp/d' /etc/passwd
5. sed 's/lp/mylp/g' /etc/passwd
________________________________________

1. awk -F: '{print $5}' /etc/passwd
2. awk 'BEGIN {FS=":";i=1} { print i,$1,$5, $6; i++}' /etc/passwd
3. awk 'BEGIN {FS=":"} { if($3>500){print $1,$3,$5}}' /etc/passwd
4. awk 'BEGIN {FS=":"} { if($3=500){print $1,$3,$5}}' /etc/passwd
5. awk 'BEGIN {FS=":"} { if(NR>=5){if(NR<=15){print $0}}}' /etc/passwd
6. awk 'BEGIN{FS=":"; sum =0} {sum = sum + $3} END{print sum}' /etc/passwd
________________________________________

1. 
#! /bin/bash

echo "Enter a char"

read ip

case $ip in 

[a-z] )
	echo "lower case"
	;;
[A-Z] )
	echo "upper case"
	;;
[0-9] )
	echo "integer/digits"
	;;
*     ) 
	echo "Nothing"
	;;
esac


2.
#! /bin/bash



echo "Enter a string"
read s

up=0
lo=0
di=0


for ((i=1; i<= ${#s};i++));
	do
		case ${s:$i-1:1} in
		
		[A-Z] ) 
		 	up=1
		;;
		[a-z] )
			lo=2
		;;
		[0-9] )
			di=4
		;;

		esac
	done

let up=$up+$lo
let up=$up+$di


case $up in

1 ) 
	echo "Upper"
	;;
2 )	
	echo "Lower"
	;;
4 )
	echo "Integer/Digits"
	;;
* )
	echo "Mix"
	;;
esac

3.
#! /bin/bash

#to make sure I am modifying the home directory
cd ~

chmod u+x*

4.
#! /bin/bash

cd ~
tar -cf backupofHD.tar ~

5.
#! /bin/bash

for user in  awk -F: '{print $1}' /etc/passwd:
do
         mail -s "Subject" $user <"$mtemplate"
done




7.
#! /bin/bash

select choice in ls lsa exit
do
        case $choice in
                'ls') ls;;
                'lsa') ls -a;;
                'exit') exit;;
        esac
done
_____
#! /bin/bash
while :
do
        read -p "Press 1 to ls, 2 to ls -a, 3 to exit: " r
        case $r in
                1) ls;;
                2) ls -a;;
                3) exit;;
        esac
done

8.
#! /bin/bash
echo "Number of elements: " 
read n
declare -a arr
for ((i=1; i<=n; i++))
do
	echo "Please enter element $i: " 
	read e
	arr+=($e)
done
echo ${arr[*]}


